Thanks for the detailed photos! You're super close ‚Äî just a small fix is needed in the MainWindow.xaml.


---

‚úÖ Problem

In your <controls:TestSummaryControl ... /> line, you're doing this:

<controls:TestSummaryControl DataContext="{Binding TestSummaryViewModel}" Margin="0,0,0,10"/>

‚úÖ That binding is correct
‚ùå But in MainMainWindow.cs, the property is called TestSummaryViewModel
‚ùå And TestSummaryControl.xaml expects that context to have PassedCount, FailedCount, etc.


---

‚úÖ Solution ‚Äì Move DataContext Setting to the Control‚Äôs Code

You can remove this line from MainWindow.xaml:

DataContext="{Binding TestSummaryViewModel}"

Because the TestSummaryViewModel is already part of your MainMainWindow, you can bind each property directly like this:


---

‚úÖ Corrected MainWindow.xaml:

<controls:TestSummaryControl
    Margin="0,0,0,10"
    PassedCount="{Binding TestSummaryViewModel.PassedCount}"
    FailedCount="{Binding TestSummaryViewModel.FailedCount}"
    TotalCount="{Binding TestSummaryViewModel.TotalCount}" />

But for that to work, you need to update your TestSummaryControl.xaml.cs to expose those as DependencyProperties.


---

üîß TestSummaryControl.xaml.cs Code-Behind

Update it to look like this:

using System.Windows;
using System.Windows.Controls;

namespace NeuUITest.UI.TestSummary
{
    public partial class TestSummaryControl : UserControl
    {
        public static readonly DependencyProperty PassedCountProperty =
            DependencyProperty.Register(nameof(PassedCount), typeof(int), typeof(TestSummaryControl));

        public static readonly DependencyProperty FailedCountProperty =
            DependencyProperty.Register(nameof(FailedCount), typeof(int), typeof(TestSummaryControl));

        public static readonly DependencyProperty TotalCountProperty =
            DependencyProperty.Register(nameof(TotalCount), typeof(int), typeof(TestSummaryControl));

        public int PassedCount
        {
            get => (int)GetValue(PassedCountProperty);
            set => SetValue(PassedCountProperty, value);
        }

        public int FailedCount
        {
            get => (int)GetValue(FailedCountProperty);
            set => SetValue(FailedCountProperty, value);
        }

        public int TotalCount
        {
            get => (int)GetValue(TotalCountProperty);
            set => SetValue(TotalCountProperty, value);
        }

        public TestSummaryControl()
        {
            InitializeComponent();
        }
    }
}


---

üîß Update TestSummaryControl.xaml to Bind to Self

Change the internal bindings like this:

<StackPanel Orientation="Horizontal" Margin="10">
    <TextBlock Text="‚úî Passed: " FontWeight="Bold" Margin="0,0,5,0"/>
    <TextBlock Text="{Binding PassedCount, RelativeSource={RelativeSource AncestorType=UserControl}}" Foreground="Green" Margin="0,0,15,0"/>

    <TextBlock Text="‚ùå Failed: " FontWeight="Bold" Margin="0,0,5,0"/>
    <TextBlock Text="{Binding FailedCount, RelativeSource={RelativeSource AncestorType=UserControl}}" Foreground="Red" Margin="0,0,15,0"/>

    <TextBlock Text="üìä Total: " FontWeight="Bold" Margin="0,0,5,0"/>
    <TextBlock Text="{Binding TotalCount, RelativeSource={RelativeSource AncestorType=UserControl}}" Foreground="Black"/>
</StackPanel>


---

‚úÖ Result

This now follows MVVM, allows custom bindings, and removes the need for full DataContext replacement. The summary will now update in real time.


---

Would you like me to generate the fully updated .xaml and .xaml.cs files in one block for copy-paste?







You're right ‚Äî from the image, we can clearly see:

The icons and text are overlapping.

The "‚úî Passed:" section looks squashed and unreadable.

Overall spacing/layout is inconsistent.


Let‚Äôs fix the layout and alignment for a clean and professional appearance.


---

‚úÖ Fixing Layout and Spacing in TestSummaryControl.xaml

Update your TestSummaryControl.xaml like this:

<UserControl x:Class="NeuUITest.UI.TestSummary.TestSummaryControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Height="Auto" Width="Auto">
    <Border Padding="8" BorderThickness="1" BorderBrush="LightGray" CornerRadius="4" Background="White">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Spacing="20">
            
            <!-- Passed -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="‚úî Passed: " FontWeight="Bold" Foreground="Black" Margin="0,0,5,0"/>
                <TextBlock Text="{Binding PassedCount, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                           Foreground="Green"/>
            </StackPanel>

            <!-- Failed -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="‚ùå Failed: " FontWeight="Bold" Foreground="Black" Margin="0,0,5,0"/>
                <TextBlock Text="{Binding FailedCount, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                           Foreground="Red"/>
            </StackPanel>

            <!-- Total -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="üìä Total: " FontWeight="Bold" Foreground="Black" Margin="0,0,5,0"/>
                <TextBlock Text="{Binding TotalCount, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                           Foreground="Black"/>
            </StackPanel>

        </StackPanel>
    </Border>
</UserControl>


---

‚úÖ Improvements This Will Make

Problem	Fixed by...

Overlapping text/icons	Using StackPanels per section
Cramped layout	Adding Spacing, Margins
No padding or borders	Using a Border wrapper
Inconsistent alignment	Aligning with VerticalAlignment



---

Optional Polish

If you want it even better:

Add FontSize="14" for better readability.

You could wrap this in a Grid with ColumnDefinitions if you want tighter control.



---

Let me know if you want me to generate a dark version to match your console background style too!

